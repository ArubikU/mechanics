plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.wuason'
version = '1.0.1.3'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'phoenix'
        url = 'https://nexus.phoenixdevt.fr/repository/maven-public/'
    }
    maven {
        name = 'nexus'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }

    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven { url 'https://jitpack.io' }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://maven.enginehub.org/repo/'
    }
    // for releases
    mavenCentral()
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    implementation "dev.jorel:commandapi-bukkit-shade:9.0.3"
    implementation "net.kyori:adventure-text-minimessage:4.14.0"
    implementation "net.kyori:adventure-platform-bukkit:4.3.0"
    implementation "net.kyori:adventure-api:4.14.0"
    implementation 'com.github.oraxen:protectionlib:1.3.1'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.11.3'
    compileOnly 'com.github.oraxen:oraxen:1.155.0'
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.5.0b'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'io.lumine:Mythic-Dist:5.3.5'
    compileOnly 'io.lumine:MythicLib-dist:1.6.2-SNAPSHOT'
    compileOnly 'net.Indyuce:MMOItems-API:6.9.4-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.7'
    compileOnly 'io.lumine:MythicCrucible:1.7.0-20230723.171823-33'
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    relocate("dev.jorel.commandapi", "dev.wuason.commandapi")
    relocate("net.kyori", "dev.wuason.kyori")
    relocate("de.tr7zw","dev.wuason.nbt")
    relocate("io.th0rgal.protectionlib", "dev.wuason.protectionlib")
    archiveFileName.set("Mechanics-${version}.jar")
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

}
